#!/usr/bin/env bash

set -euEo pipefail
trap 'echo "${BASH_SOURCE:-unknown}:${LINENO:-unknown}: $BASH_COMMAND";' ERR

readonly usage="
Usage: $(basename "$0") [<GENERAL OPTIONS>] <OPERATIONS> <OPTIONS>

GENERAL OPTIONS:
  -h, --help                   Print this help

OPERATIONS:
  create                       Create the VM
    -n, --name <name>          The VM name
    -d, --directory <path>     The VM base directory
    -i, --iso <path>           The VM ISO image

  delete                       Delete the VM
    -n, --name <name>          The VM name

  start                        Start the VM
    -n, --name <name>          The VM name

  poweroff                     Poweroff the VM
    -n, --name <name>          The VM name
"

help_and_exit() {
  echo "$usage"
  exit 0
}

err_with_msg() {
  echo >&2 "$1"
  exit 1
}

err_with_help() {
  echo >&2 "$1"
  echo >&2 "$usage"
  exit 1
}

# Exit if a operation or option not provided
if [[ "$#" -lt 1 ]]; then
  err_with_help "error: you must provide a valid operation or option"
fi

# Print the program usage
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  help_and_exit
fi

# Get option and setup options
readonly operation="$1"
case "$operation" in
  create)
    readonly longoptions="name:,directory:,iso:"
    readonly options="n:d:i:"
    ;;
  delete | start | poweroff)
    readonly longoptions="name:"
    readonly options="n:"
    ;;
  *)
    err_with_help "error: unexpected operation on line ${LINENO}: $operation"
    ;;
esac

# Read options for operation
readonly arguments=("$@")
opts=$(
  getopt \
    --name "$(basename "$0") $operation" \
    --longoptions "$longoptions" \
    --options "$options" \
    -- "${arguments[@]:1}"
)

eval set -- "$opts"
unset opts

while true; do
  case "$1" in
    -n | --name)
      readonly name="$2"
      shift 2
      continue
      ;;

    -d | --directory)
      readonly directory="$2"
      shift 2
      continue
      ;;

    -i | --iso)
      readonly iso="$2"
      shift 2
      continue
      ;;

    --)
      shift
      break
      ;;

    *)
      err_with_msg "error: unexpected option on line ${LINENO}: $1"
      ;;
  esac
done

# Validate options for operations
case "$operation" in
  create)
    [[ -z ${name+x} ]] && err_with_help "error: name param is required"
    [[ -z ${directory+x} ]] && err_with_help "error: directory param is required"
    [[ -z ${iso+x} ]] && err_with_help "error: iso param is required"
    ;;
  delete | start | poweroff)
    [[ -z ${name+x} ]] && err_with_help "error: name param is required"
    ;;
  *)
    err_with_help "error: unexpected operation on line ${LINENO}: $operation"
    ;;
esac

operation_create() {
  local -r vmname="$1"
  local -r vmdirectory="$2"
  local -r iso_path="$3"

  VBoxManage createvm --name "${vmname}" \
    --basefolder "${vmdirectory}" \
    --ostype ArchLinux_64 \
    --register

  VBoxManage modifyvm "${vmname}" \
    --accelerate2dvideo on \
    --accelerate3d on \
    --acpi on \
    --boot1 dvd \
    --boot2 disk \
    --cpus 2 \
    --firmware efi \
    --graphicscontroller vmsvga \
    --memory 2048 \
    --nic1 nat \
    --vram 128 \
  ;

  VBoxManage createmedium disk \
    --filename "${vmdirectory}/${vmname}/disk.vdi" \
    --format VDI \
    --size 16000

  VBoxManage storagectl "${vmname}" \
    --add sata \
    --bootable on \
    --name SATA

  VBoxManage storageattach "${vmname}" \
    --device 0 \
    --medium "${vmdirectory}/${vmname}/disk.vdi" \
    --nonrotational on \
    --port 0 \
    --storagectl SATA \
    --type hdd

  VBoxManage storagectl "${vmname}" \
    --add ide \
    --bootable on \
    --name IDE

  VBoxManage storageattach "${vmname}" \
    --device 1 \
    --medium "$iso_path" \
    --port 1 \
    --storagectl IDE \
    --type dvddrive
}

# Execute operation
case "$operation" in
  create)
    operation_create "$name" "$directory" "$iso"
    ;;
  delete)
    VBoxManage unregistervm "$name" --delete
    ;;
  start)
    VBoxManage startvm "$name" --type gui
    ;;
  poweroff)
    VBoxManage controlvm "$name" poweroff
    ;;
  *)
    err_with_help "error: unexpected operation on line ${LINENO}: $operation"
    ;;
esac
